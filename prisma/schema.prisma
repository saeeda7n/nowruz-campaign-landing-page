// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  refId            String    @unique @map("ref_id")
  phone            String    @unique
  fullName         String?   @map("full_name")
  sessions         Session[]
  otps             Otp[]
  answers          Answer[]
  points           Int       @default(0)
  vouchers         Int       @default(0)
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime? @updatedAt @map("updated_at")
  cards            String[]  @default([])
  seenCards        String[]  @default([]) @map("seen_cards")
  claimedRewards   String[]  @default([]) @map("claimed_rewards")
  newAccount       Boolean   @default(true) @map("new_account")
  representativeId String?   @map("representative_id")
  isAdmin          Boolean   @default(false) @map("is_admin")

  discountCodes  DiscountCode[]
  users          User[]         @relation("ref")
  representative User?          @relation("ref", fields: [representativeId], references: [id])
  messages       TextMessages[]
  ClickRecords   ClickRecords[]

  @@map("users")
}

model Session {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

model Otp {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  code      String   @db.VarChar(6)
  used      Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@map("otps")
}

model Answer {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  dayId     String   @map("day_id")
  answers   String[]
  stars     Int      @default(0) @db.SmallInt
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("answers")
}

model DiscountCode {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  code      String
  value     Int
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@map("discount_codes")
}

model TextMessages {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  deliveredAt DateTime? @map("delivered_at")
  message     String
  receiver    User      @relation(fields: [userId], references: [id])

  @@map("text_messages")
}

model ClickRecords {
  id          String   @id @default(uuid())
  userId      String?  @map("user_id")
  user        User?    @relation(fields: [userId], references: [id])
  referenceId String   @map("reference_id")
  model       String
  createdAt   DateTime @default(now()) @map("created_at")
  ip          String?
  geo         Json?

  @@map("click_records")
}
